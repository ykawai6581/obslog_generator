import argparse
import csv
from datetime import datetime, timedelta
import getpass
import io
import json
import os
from past_observation_crawler import find_obsdates, find_weather_and_comments, adjust_name, deg_to_dms, deg_to_hms
import sys
import time
import urllib
import urllib3

try:
    from astropy.time import Time
    import numpy as np
    import pandas as pd
    import pyshorteners
    import requests
    import tqdm
except ModuleNotFoundError:
    print('_________________________________________________\n')
    print("Some required modules are not installed.\n\n    pip install -r requirements.txt\n\nPlease run the above command and try again.")
    print('_________________________________________________\n')
    sys.exit(1)

parser = argparse.ArgumentParser(description=\
'## obslog formatter ver. 2022 Nov. 19 ##')

parser.add_argument('--obsdate', type=int, help='observation date in yymmdd format')
parser.add_argument('--edit', help='if provided, script enters edit mode to edit past observations.', action='store_true')
parser.add_argument('--jd', help='if provided, timestamps will be given in jd instead of ut', action='store_true')
parser.add_argument('--bypass', help='if provided, data download from wiki is bypassed. may be useful for checking tonight\'s obslog', action='store_true')
parser.add_argument('--obj', type=str, help='if given, only the log for that object will be returned. \
                                            variations of names (eg: TOI0XXXX and TOI-XXXX) are treated equally for most cases.\
                                            planet identifiers (eg: -b, b, .01, .1 etc.) are not necessary because it is difficult to\
                                            account for the inconsistencies and query may return empty results.\
                                            case insensitive.',default='all')

args = parser.parse_args()
if args.obsdate is None and args.obj == 'all':
   parser.error("at least one of --obsdate and --obj required")

dirname = os.path.dirname(__file__)
credentials = os.path.join(dirname, 'cred.json')

if not args.bypass:
    try: 
        with open(credentials, 'r') as openfile:
            payload = json.load(openfile)
    except FileNotFoundError:
        print('\n_____MuSCAT2_wiki_login__________________________\n')
        print("***you can also provide a cred.json file to bypass login***\n")
        username = input('username: ')
        password = getpass.getpass(prompt='password: ')
        print('_________________________________________________\n')
        payload = {"username": username, "password": password}

ip = {"shine": "161.72.192.46"}

#weather is retrieved from telescope.org if record does not exist on wiki
no_record = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x02\x1aIDATx\x9c\xed\xda\xcdm\xdb@\x14E\xe1\xf3\x0c\xefSB\\\x82;\x88:H:\x08\x03\x18\x91va:P\tZR\x81\x00+\x1d(\x1d\xd8\x1d8\x15\x98\xee@)@yY\x98\x8eEJO\xf4\xc2\x9e\x99\xc5\xfd\x96\xe4\x00\x1c\x1cp\xf8\'\x81\x1ce\x00\xbe\xc4sO\xa4$6}\xec\xa20{\x9eZ\x9c\xe5\x9eH\xa9\x14&\xa00\x01\x85\t(L@a\x02\n\x13P\x98\x80\xc2\x04\x14&\xa00\x01\x85\t(L@a\x02\n\x13P\x98\x80\xc2\x04\x14&p\x9e\xf2`\xbe\xe2=;&8\x13\xe0"\x1ch\xdc\xe1\xb4\x18k\x9b\xf2\'\xd5\xfc\xf6%\x0b\xe3\r\xf7\xec\xba\x186:|\xd2\x8dY\xf8\x92\x85M\xf9\xfe\x96s;&\xddR\xb2\x13g\xc8i\xb57\\\xfb\x92w\xaf9\x9d1I\x97\x12@\xb7D6\xc0\x16h1\xda\xde\xfe\xbf\\\x02u/\xa4Qu\xe3\x93\x9d9\xe9\xc28k`a3~\x8f\x8c\xbc\xf5\x15\x1bvl\x80\xcb\xbd\xed\xb5\xafX\xd8\x15\x0fo6\xc7=\xc9\x96\x92\xcd\xf8\xf2\x82(\x8fc\xafx\xc0\xa8\x0fv\xec\xa8^{^\x91bo\xd7\xf6\x95\xdb\x9c\xc7/6Ln\xc5\x86\xf1\x86\x8f\x07\x1b\x8d\x9bT\xc7/6\x0c\xc6|\xb0e\x9bry\x15\x19\xc6\x1b\xae\xe9\xdf\x91\xc0\xd3]x!\xc7s\xcc\t\xddC\xdc\x1a\xf84\xd8U\xd9\x8c_)\xe7R\xcc\x19\xe3\r\xdf\x80\x96~\x94-P\xd9\x94\x9f\xa9\xe7\x93\xfd\x8c\xf1%\x9fq\xe6\x07\xaf\x0c\xce\r\xe7T\xa9\x1e\xe8\x86\xb2\x86\xf1\x86{\xe0\xa2\xf7R\xe9\xb4@\x9dz\xe9\x0c\xe5=c\x0e_,+\x9b\xa5_6\xc7\x14s\x8d\x01\xc8q-\x89\x14\x15\xa6$\n\x13\xc8}W\x9ag>\xfei\xfa;\xeb3\xfd\x9duD\xde\xe7\x98\x1f|\xe8o\xe0.\xd7\xaf\x02Cy\xaf1>\xf8\x8c`L \xef\x07\xaa\'ZJ\x01\x85\t\x94u\xbb>\x1b\xfc\x94\x92\x9bn\xd7\xcft\xbb\x1e\xa10\x01\x85\t(L@a\x02\n\x13P\x98\x80\xc2\x04\x14&\xa00\x01\x85\t(L@a\x02\n\x13P\x98\x80\xc2\x04\x14&\xa00\x01\x85\t\xfc\xff\x18\xae\xef\xbe\xf2"\xff\x00\x17\x96q\xa2U\n\x0cB\x00\x00\x00\x00IEND\xaeB`\x82'

clear  = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x01\xc1IDATx\x9c\xed\xdb\xbfm\xdb@\x14\xc7\xf1\xef\xd1\xee\xed\r\xe4\r\xe2\r\xcc\r\xec\r\xe4"H\xdc\x85\xad\xd8\xd8#\xa8\xf4\x19,\xbc\x81\x91\r\x98\r\x94\r\x94\r\x9c\x9e\xc4K\xc3\xc6\x88E\x8a\xf2\x1d\x8f\x90\x7f\x9fJ\x80\xc8\xf7\x1e~8\xfe\x11D\x82\x88\x88\x88\x88\x88\x88DU\x96\xe5}\xea\x19B\xc9B\x15*\xcb\xf2\x07\xf0\xb0Z\xad^B\xd5L)X0fVt\x1f/C\xd5L)X0Y\x96\x15fVgYV\x0co-""G\xad\xaa\xaaEUU\x8b\xb1\xfb\x05\xbb*\xcdU\xdb\xb6\xeb\xa6ij\xef\xfd\xd9\x98\xfd\x8e:\x18\xef\xfd=p\xe3\x9c\xbb\x00F\xddF\x1cu0\xc0\xda\xcc\xb6f\xb6\x05\xd6\xa9\x87\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x91\xe3\xe3B\x14\xb1\x8a\x05-\xb7\x189\x8e|\xf7\x86\xd48jNxv_\xf9\x13\xa2w,\x1f\n\xc6\x1e\xb9\x06\x8a\xde0v\xeeL\r\xac\xdd\x1d??2C,\x07\x05c\x15\x0b\x1a\x9e\x0f\n\xe4\xbfb\xd4\x9cr;\xb7\x154\xfa\xbfk\xf3,i\xd9\x04\t\x05\xc0\x91\xd3\xb21\xcf2H\xbd@F\xad\x18{\xe2\xaa;\x04\xe2p\xe4\xee\x1b\xbf\xa2\xd5\x1fa\xef`\xec\x91/8j\xe0<\xde8\xbcb\xe4\xee\x8e\xdf\x11{\xece\xaf`\xccs\x06\xd4L\xf3\x0c\xef\x06\xc8\xddw\xfeN\xd0k\xa7}\xcf1\x05\xd3=\xd8|\xc9\xc8\x87|b\x18\\1\xdd=\xcav\x82Y\xde:\xe1"\xe5\x95jx\xc54<\xc4\x1fcF};\xbd+\xa6;\xb7\xbcN4\xcb{\xceS\x9dk\x86V\xcc\xcd$S\xcc\xb0\x7f\x7f0\x16\xe8&\xeeP\t\xfb\xf7\x07\xe3\x12\xbfb\x93\xb0\xff\xd0\xa1\x94\xfa\xdd\xa3\xd9\x06\xf3i)\x98\x1dN{\xbf\r\xf5\x0bZDD\xde\xf8\x07\x14\xc5g:p\\\xae\xe2\x00\x00\x00\x00IEND\xaeB`\x82'
clear2 = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x03fIDATx\x9c\xed\x9b\xdf\x95\xda:\x10\xc6\xbf\xd1\xde\xf7M\x07\xbb\x1d,Gk\x9e\x97[A\xe8\xe0\xd2A\xd2AH\x05!\x15\x84\x0e\xc2v@\x9e\xad\x9dC: \x1dp\x0b\xd8\x99< \xe7p\x82\xb1l#\x83a\xf5{\xf2\xb1li\xf8\xac\x7f3#\x80D"\x91H$\x12G\x90\xe7\xf9\x97<\xcf\xdfw\xd9\x06\xc5\xac\x8c\x99\x9fDd@D\xef\x88ha\xad\xfd\x19\xb3~\x00p\xce}\x000\x03\xb01\xc6\x0c\xac\xb5\xbfb\xb7\x01\x00\xff\x1c[\x81\x17c\x02`""P\xd5\x951f\xdc\x95\xc1\xaazO\x14\xf5{\x96\xd2Z\x18/\xc8TDF\xc5=U]\x11\xd1\xc8Z\xfb\x7f\x14\xebJ \xa2)\x80\xb51f\xd5\x95\xf8@\xcb\xa1\x94\xe7\xf9\x17"\xfa\xb8{\xaf\x10%\xcb\xb2\xceD9%\x8d\x84q\xce\xdd\xaa\xea\x92\x88\x06\x7f\x97\xf9\xf1\x1e}N9\x17\x8d\x86\x92\xef%{\xa2\xa8\xea\xec\x9aD\x01\x00S\xf7Af~R\xd5iY\xd9\xcd\xcd\xcd,\x9aE=\xa1\x960\xce\xb9[\x11Y\x1c(\x9ew9\t\x9e\x8b\xba=f\x01\xe0]i\x05\xc6L\xa3Ys"^^^>\x85\x9e\t\n\xe3\x9c\xfb\x0f\xc0\xa8\xacLU;]2\xbb\xc09\xf7AU\xa7\xce\xb9\xefU\xcf\x05\x85Q\xd5\x8f\x15\xc5\xcb\xa6\x86\xf5\x80\xe2\xf7\xec-"\xbbT\n\xc3\xcc\x0feKs\x01\x11\xadZ\x18vV\xfc\x87^\x06>x\xf5r\xbd\xbb\xab-\xc3\x18\xb3nl\xd9\x99\x19\x0e\x87\xcf\x00\x9eC\xcf\x85\x86\xd2\xa8\xaaPD.\xae\xc7\xd4%$L\xe9JTp-\xdb\xff2*\x85Q\xd5*a6\x91m\xe9\x15\x95\xc2TM\xbc\x00\xaev\x18\x01\r\\\x82\xb7F\x12\xe6\x00!a\x96\x87\n\x02\xf3Ok\x98\xf9\x8e\x99\xef\xba\xa8\xbb\t!a\xd6\x87\n\x02\xf3OkDd&"K\xe7\xdcm\x17\xf5\xd7\xa5u\x8f\x01\xb6^w<S\xfe8wc\x00\xf7\x7fG\x08OMH\x98C\xa1\x86\xed\xcb\xc6D\xed5\xaa:\xc3\xb6\x97\xae\xfd\xf5\xd9\x08\x866\x9ds\xdf\x00LJ_&\x9a>>>~\x8emT\x1f\x08\xaeJU\xf1\x16\x11\x19G\xb5\xa6\x03\x98\xf9\xce\x87N\x1a\x11\x14\xc6Z\xfb\xcb\xa7,\xf6 \xa2A\x1fV\x90C\xf8\xc8\xe3\x14\xc0\xdc\'\xeajSk\x1f\xe3\x87\xcb\xb2\xac\xcc7\xdcK\x8c1\xf7\xd8N\xe6@ \xfe\xb2\xf7n\x83F&(\xf7\x8f&}\xed5\xd6\xda\x9fD4\x03\xb00\xc64\x9a\xcc\x1b\xe5\x95\xf2<\x7fODs\xec{\xdd\xcb,\xcb\xfemRW\xdfi\xe4\x12\x0c\x87\xc3gc\xcc\x08\xfb=gT\'\xc0|I\xb4J\xd12\xf3\x83O\xa7\xdc\xef\xdeW\xd5\xb1\x8f\x90]<\xad\x9cH\x9fu\x1c`\x1bX^\x17\xf7\x89h\xce\xccOqL;/Q\xceS\xf8}\xc2\x04\xdbP\xe8\x06\xc04\xcb\xb2\xaf1\xea>\x17Q\x0f\x9a8\xe7n\x0b7\xc1Z\xfb#f\xdd\x89D"\x91H\xf4\x0bf~:\xd5>\xe9b\xb2\x04\xcc|\xf7\xfa\xfa:\x13\x91%3?t\xdd\xde\xc5\x08#"\xa3"\x00/"\x9d\x04\xe2w9\xfa\x00\xf4\tY\x00\x98\xef\\\'.\x12f~8w\x0e\xa8\x0b\x8e\x9acvNs\xce\xe3\x98\xd3\x1f\x8e\x9d|\x8b\x98\xcc\xf8Z\xc2\r\x05G\t\xe3S+\x1b\x00\x8b\xe4M\'\x12\x89D}\xba\xff\x0f]\xcf\xf0{\xaeM(\xa3q1\xbeRDV\x00\xe03\x94\x07y\xb3\xc2\xe0\xcaO\x9d\xb6\xe2\xda6\xa3\x89D"\x91H\xbcQ~\x03\xf8\x9fC\xe6\xba\xabkq\x00\x00\x00\x00IEND\xaeB`\x82'
clear3 = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x03!IDATx\x9c\xed\x9a\xd1Q\xdb@\x10\x86\xbfe\xfc\x8e;\x88\xa9\x00w\x80\xe9\xc0\xa9\x00\xe5%\xd2#\xa9\x00R\x01\xce\x9b\xc50\x83SA\\\x82RAL\x05\xb8\x03\xc4{\xc2\xe6A\x07\x08\x8fe\x9d\x8d\xefN\xcc\xdc\xf7\xa6\xf1x\xff\xf5?\xeb\xbd\xd3\xed\x81C4\xe7As\x1e\\j\xb8\xa2\xe78~\xdfq|g\x1c\x84N\xa0\xabDc\x1apmL\xe98\xbe3\xdc\xf6\x18e\xe44\xbeC\xa4\xe9\x03\xcd9D\x99#,$\xe5\x9b\xcf\xa4^r\xb8\xe1\x13O\x0c\xe4+\xbf}k7\x1bs\xc3\'\xfe\xb1\xac\x1e\x98I\xc6\x97\xb6`z\xcd\xc9\xc6*\x11\n\xdb\x1f\xa9S\x8e\x11\n\xa0\x8f2\x94\x8c;\x9b\xef\xed\x8bFc\x004\xe7\x0c\x98U\x0f\xeb\xcd\xd1kNx"AH\xacU\x95\x19\x07\xcc\x9aLzc\n,\x80\x91\xa4<Z\xc7\xdf\x03\x1b\x8d\x81\x15s \x91\x94\x9f\xf0R\x1d\x13`\xf8\x0e\xfd\x05\xc2y\xdd S\xa9\x0b\x02\x9a\x02\x16\xab\x921"A)PJ\xcd9\xd4\x9c+\x94\x82\xf7\x99\x020D)4\xe7Js\x0e\x01\xf8\xcb\x98\xc0\xa6\x80E\xc5\xd41\xc9\x17\xbc\xdf\x90u,\xc0\xf4\'a\x88\xb2\x08e\nl\xbb\\+\x13\xc4\x89)PU\xcf\xc4\xf41\xef\xab\xd0*\xd6\x1b<\xcd\xb9\xd8\xaa\xc1\xee\x82\x90h\xce\x85S\rK\xac\xfeJ\xa6\xd1\x16\x8esyE\x18\x85\xd8\xbb\xd4\xb1\xab\x98j\xf5\xf1\x87o\xbd5\xb4\x1ac\x96kW}\xa5\x89\xa1\xd1\rF{\xc5(\x97\xee\xd3\xe8\x90\xaea\xa31f\x07:\xf0\x94\xcb[\x84\x81N9\x0e\xa2M[\xc5\x08cOytN\x7f\xb31\xa1\x8f\r\x02\xea\xb7U\x8c\xef\xa6\xdb\x19\xfd\x9e\xe6\xfc\xa1\xbe\xea(K\x0eH\xcc>"\xf4av0\xfd\x1e\xabK\xb10\xe0\x89!\x1d\xd8\x96\xd7\xd1)\xb7+;\xef\x12\xe5R2~\xb8\xd0\xebI\xba\xdd\x8bd@F+\xcf}\x84\x1182\xc6EP\x17H\xc6\x91O\xbd\xb6U\xa9\xf0\x93F\xf7\xf4\xdbv\xbeK\x1fItQ\xbfm\xb9.\xfc\xa4\xd1=\xfd\xb6\x8a\x99{\xc9\xa2\x83\xfa\x1b\x8d1G\x8b\xa1\x92\x9b\x87<\xdal\x7f\xbb\x96@g#\xa1t\r\xedS\x82j\x07\xec\xbbj\xe6\x1f\xe3\x04\x0f\x12\xfc\r\xe8K\xa3\x17\x14+c$\xe5\xd1\xdb\x11\x800\x0e\xd9[\x9e\xb1\x9e\x12\x98\xd2NpW9%\xbc\xbc\xbc\x06\xa7}D\xfb<GVJ\xc98Z\x99+\xef\x8b\x12e$\x19w\x9as\x86\xd2w\xf5rh\x8b\xcd\xd1fA\xf5\xc2V\x02\x98[\x07\x83\xbdm\xd7\xab8\x83\xdam\x86\t\xc2D\xa7\xdc\xee%\xfe\x8e4\x1a\xb3\xee\xc6\xc1\xf3g\x92\xf2(\x19\xa7(ct\xc7m\xbb\xb2D\x19K\xc6\xe9JO9\xafDHB\x9a\xb3\xe9\xe2\xd0/`\x8c\xc5p}\xab\xab -W@\x8cv\xfd\x86\xc5\xa5\xa4|o\x8d\xbbg\x9a\x8dy\xbd\x044\xd9f\x95\xd0kN\x1a\xc5\xb6h\xac5s\xe6\x92\xf2\xd9\xf6{\x91\x8f\x8cN\xb9\xd7)\xf7\xa1\xf3\xd8\x05\xb7\'x\xa1\x86u{ ^\x80n \x1a\xd3@4\xa6\x01\xd7S\x82\x04\r>\xb4\x8bD"\x91H$\x12\x89D"\x91H$\x12\x89D"\x91H$\x12\xd9\x82\xff\x86\x85\xf9\xb5\x07*\x00I\x00\x00\x00\x00IEND\xaeB`\x82'

windy  = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x06\x11IDATx\x9c\xed\x9b=z\xdb8\x10\x86\xbf\x81\xb7\xb7\xf7\x04f\x9d\xc6Z\x85\xaa\xcd\x9c \xf2\t\xa2}\x14\xc2\xa5\xb5\'\xb0|\x82(e\xc8\xe4Y\xfb\x04fN\xb0J-\x8a\xeb\xdc\x80[\xbbQ*W\xc1l! a$\xfe\x80\xb2dI\t\xdf\x864@\x02\xe0\x08\x98\xc1\x0c\xc6@CCCCCC\xc3#\x98L&o&\x93\xc9\xcbM\xf6A\xebl,I\x92S\xa5T\x8b\x88\x8e\x88(j\xb7\xdb\x9f\xd7\xd9>\x00\xc4q|\x01`\x04`&\x84h\xb5\xdb\xed\xff\xd6\xdd\x07\x00\xfc\xf6\xd8\x06\xb40z\x00zJ)0\xf3\x9d\x10\xa2\xbb\xa9\x013\xb3C\xb4\xd6\xdf3\x97\x95\x05\xa3\x052TJy\xa6\x8c\x99\xef\x88\xc8k\xb7\xdb_\xd62\xba\x1c\x88h\x08 \x15B\xdcmJ\xf8\xc0\x8aKi2\x99\xbc!\xa2A\xb6\xcc\x08\xc5u\xdd\x8d\t\xe5)\xa9%\x988\x8e\x0f\x99yLD\xad\xc5:\xbd\xde\xd7\xaeS\xb6E\xad\xa5\xa4g\xc9\x92P\x98y\xf43\t\x05\x00\x84\xed\x83I\x92\x9c2\xf30\xaf\xee\xe0\xe0`\xb4\xb6\x11\xed\x08V3&\x8e\xe3C\xa5TTP}\xbdI%hC\xbf\xdf?>88\xe8-\x963\xf38\x0c\xc3O\xab\xb4i\xa5c\xe28\xfe\x07\x80\x97W\'\x84p\xb6%\x18)\xe5!3\x8f\x88\xa8W\xf2X\n`\x18\x04\xc1\x8d)\x98N\xa7\x97\xcf\x9f?\xbf*k\xbbR0q\x1c\xbf\x02p\x9dW\xc7\xccw\x9dN\xe7\x8f\xaa66\x85\xef\xfb\xff\x1aC\xc0\xcc\xd7D\x94f\xaa\x8f\x00t\x018\xa6>\x0c\xc3?3\x1b\xc4\xc8u\xdd\xb3\xa2\xb6+\x97\x123\x0fJ6Tc\x9b\x0f\xd8\x04R\xcaK\x00-f\x9e\t!\xbc \x08\xf2\x94\xff_\xfa\xb9!\x11\xf5\xa4\x94)\x80\x9e\xae[2"YJ\x95o\x92$\'y\xa6\xd9@Dw\xa5\xa3\xdf\x10\xfd~\xff\x18\xc0P\xff\xd9}\xf7\xee]\xa1E\x0c\x82\xe0\x8a\x99\x07\xc0\xfcG\xd6\xf7cSVD\xa9`\xb2\xbb\xda\xdc\x97\x85H\xcb\xea7EF\xd1F6\xca5\x0c\xc3\xb7\x00R":\n\x82`\xe6\xba\xee\x8bN\xa7\xf3\xb1\xec\x9d*s\xed\x95U*\xa5\xb62c\x98\xd9\xd3\xfd_\xe7\xd5\xfb\xbe\x7f\x9aS\x1c\x01\x00\x11y6}T\t\xe6\xa8\xacr\xdb\xdb\x7f"\x9a-\x96I)_\x11\xd1\xd8\xf7\xfd\x8bl93\xa7\xfa\xb6\xf4\x9b\x0c\xa5\x82a\xe6\xb2F\x96\x06\xf5\x84\xa4\xfa\x9a\xa7\xff\x1c\x00 \xa2\x1f\xc6ND\x8e\xbe\xb5\x1aw\xa9`\xca\x14/\x80\xad,#\x00 \xa2\xb1\xbe\x0e^\xbf~\xbd\x18\xb0\xca\xfd1\x99\xd9\x98\xf5\xb1M\x1f\x8f\x8e\xc7l\x83 \x08n\xa4\x94]\x00]!D$\xa5L\xcdRa\xe6\x96\xde^\xa4\xe6y\xbd\x11l\x01\x80R*]nq\x99\xbd\x14\x8c\xa6\x07`\x80\xb9\xd9v2K\xc5\xb8\x027\x99g\xbbzi\xa5\x1f>|\xb0\xda\xa5W\tf\x8c\x02\xcbT\xa1\x7fV&I\x92c\x00\xa8r3\x82 \xf8\x02\xe0\n\xc0\xd5\xa2\x15\xca\x9ap)\xe5!\xf4\x9e\x87\x99\xad\x9d\xdd*\xc1\xa4E\x15\x15\xfage\x94R#\x00\xad8\x8e[\xb6V\xafh/\xa3\x97PDD\x0e3\xcf\x88\xe8\xdav\x1cU\xe6z\\V\x19\xc7\xf1\xa1mG6L\xa7\xd3Kh\xfff1BX\x17\xdf\xf7OuP\xcd\xcb\xb8\r\xd6\xdb\x8bR\'\xf2\xe2\xe2\xe2\xf6\xe1\xe1\xa1\xfb\x98\x01>\x15\xcc<\x83\xb6\x94Z\xdf8\xa6\\\x08\xe1\x95\xb9\ry\x94.\xa5\x87\x87\x87\x8d,\x97M\xa0\x95\xabg\xfe\xd6\x82\x8a\x94R\xc30\x0ck\x87E*\xc3\x0eI\x92\x1c\x17\x99\xb8m\x87\x1d\xb2dM2\xf0]\xef\xe8\xf1{\xae\xeb\xde\x14\xbf\xbd\x8cU\xa0j:\x9d^\x16\x855\xb7\x19\xa8\xaaB\xeb\xc0\x11\xb4iw]\xf7\xad\xed\xbbV1_\x1d\xed\x1a\xe7\xd5)\xa5\x86\xb6\x9d=5B\x08\x07se\x0eT\xc4_\x96\xde\xad\xd1I\x0f\xf9~F\xcf\xec=v\x8dv\xbb\xfd\x99\x88F\x00"!D\xad\x80}\xads\xa5\xc9d\xf2R\xef\x05\x167wc\xd7u_\xd4ik\xd7\xb1\x9e1\x00\xd0\xe9t>\n!<,\xcf\x1cO\xefA~\x1aV:\xa2M\x92\xe4D\x1f\xa78\xd9rf\xeeVE\xc6\xd6I\xbf\xdf?\x16B\x0cu\xf0\xe9\xdbX\xf4.w\x0c \xca\x9e\x0e\xd4a\xe5\xb4\x01\xad\xf1{\x98;rfP3\x9d\xe9\xb0\xd2YN\x1d\xa4\x94\xaf\xf4\xd1I\x95\xcf\x96\x12Qi\\8\x8f\xb5\xe4S\xe8#\x96\x1e\xe6\x1b\xac\x19\x80a\x1d\xd3X\x17\xdf\xf7OML\x86\x99\xc7B\x88A\xf6\xc3\xf5L\xeab~:p\xc4\xcc3\xa5T\xcb\xd6\xb3\x06\xd6\x9c8\x14\xc7\xf1\xa1\x10\xa2\x05\x00\x9b\x9a5\xda[\xbe\x03\xe0\x98\xb3\xa2\xb2gM\x12B\xd5\xb3\x8bl>\x03g\xcdH)\xcd\x01`\n\xa0U\xe5\x18fg\x17\x80#[G\xb2\x96U\xda\x11\x86\xe6j\xf3\x91a\x18~bf\x13\x86\xb5v\x88\xf71\x82\xe7\xe8\xebR\x92\x81^f\x03\x00\xa3\xac\xd0\x88(\xc2|\xe7\xeb,\xbeS\xc4>\xce\x18\x00\xdf"x?\xc0\xcc=\xccgTQ,\xc7:\xea\xb8w\x821Q\xfe\x9c\xd3\x81\xa5#\x93\xcc;\x8e\xbe\xb5>\xd9\xd8+\xc1$Ir\xfa\xec\xd9\xb3\x14\x00\x84\x10#)\xe5\xa5>\xc7\x06\xf0\x83\x00\x16qt}j\xdb\xd7\xdeX\xa5$I\x8e\xbf~\xfd\x1a\x11Q\xeb\xf6\xf66\xbd\xbf\xbfw\x8a\x9eef\xcf\xc4ctRQ\xca\xcc\xb30\x0c\x7f\xb7\xedoof\x8cR\xca3\x01\xf8\xb3\xb3\xb3\xa1R\xaa[px6\xcc\x06\xc7M\x02@\xc6d[\xb1OV)\xc2\xf7\x04\xa6\xe8\xfd\xfb\xf7_\x00\x94\xfae\xe7\xe7\xe7\'J\xa9\x01\x11\xd5::\x01\xf6h)\xd5\xe5\xfc\xfc\xfc\x84\x99\x8d\xa3\x1b\x05AP\x98=\x95\xc7:R\xe6O\x94R\xe9\xb63\x1f\x0c&QQ\xcf\x94#\x9d\x98\xdd\xab\xdbN\xe1\x8c\xf1}\xff\xefU\x1a\xdc%\xb4\x9f\xd4\xads\x9ed(\x9c1\xb6\t6\xbb\x86\x89\xc50\xf3h\xd5TV\xe0\x91:F\xff\xa3E\x84yh\xb3\xd6\x1anhhh\xf8\x95\xf9i7xE\xe8 \xfe\xac\xeaDco|\xa55bREJ]\x84_V0\xd8b\xd6\xe9\xce\x92$I^\xe6xCCCCCC\xc3~\xf1?\xddX\xc1\x14\x9e\xe7\x88Q\x00\x00\x00\x00IEND\xaeB`\x82'
windy2 = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x04\x89IDATx\x9c\xed\x9b\xcfq\xe36\x14\xc6\xbfG\xed\xddJ\x05b\x07\xab\x0e\x96\x1d\xac\xb6\x02+3\x1e\x837\xf3j]\xac\xad \xda\x1b\xa0\xe1L\xb4\x15\xac\xd2\x01SA\x94\x0e\x98\x0e\xb4wI/\x07\x82\x0eMS$H\xd1b\xe0\xc1o\xc6c\x8a \xfe\xe8\xf3#\x1e\x1e\x1e\x0c8\x1c\x0e\x87\xc3\xe1p8\x1c\x0e\x87\xe3MY,\x16OC\x8f\xa1/\xbc\xbe\x1aZ,\x16\x0f\x00\x96\x8f\x8f\x8f?\xfajsH>\xf4\xd5\x103GD\x04\x00\xd3\xbe\xda4%\x8e\xe3\xc9\xf1x\x9c\x97\xef\x13Qr\x7f\x7f\xffg\x976{\x13\xc6\xf3\xbc\xe8t:E\x9e\xe7\xad\xfaj\xb3\t\xa5\xd4\r3\xaf\xaaD\x01\x00f\x86\x942%\xa2\xa5\x10\xe2{\x9b\xb6\xa9\x97\x11\x0e\x84R\xea/h\x0be\xe6\r\x11\xa5\x85\xe213\xcf\x88\xc8\xcf\xcb\xc30\xfc\xd5\xb4mk\x85QJ=\x01X\x02\xd83s\x10\x86\xe1\xdf\r\xcf\x01\xc0R\x08\xf1\xd5\xa4\xfd\xde&\xdfk\x12\xc7\xf1\x04\xfa\xcb\x12\xd1\xec\x9c(\x00 \x84\xf8\xca\xcc\x91\xfe\x18\x9d{\xae\x8c\x95\xc2\x14\xe6\x94\xad\xc9\xe4\x1a\x86\xe17fN\x01\x8c\xd7\xeb\xf5\'\x93>\xac\x14\x86\x99\x03\xfd{SU^\xf5\xe5\x89h[\xac\xdb\x84\x95\xc2\xe4x\x9e\xb7/\xdfSJ\xdd2s"\xa5|(\xde\xd7\x16\x03\x00c\xa3\xb6/\x1f\xde \xa4\x00p:\x9d\xaa\xd6L>\x00\x10\xd1\x0b\x01r\xef\x04\xe0\x95\x98UX)\x0c\x11%\xfa2\x92R~.\x15WZ\x043OKuk\xe9m\x81wM\x84\x10\xdf\x95R3"\x9a\x01\xd8J)Sh+\xc2\x7f+\xef\xfc3\x94R7\xf9}\xcf\xf3\x9e\xef\xd7a\xa50\x9a92\xf7\xbb\xd4\xaf\x89\x9f\x170s\x12\x86aq\xa5;C\xb6\xe0K\xef\xee\xee\xfe1i\xdc\xda\x05^\x91\xb2\x17*\xbap\x1d6\xec\x88\xc8g\xe6(\x0c\xc3o&m\xbe\x0ba\xce\xa1E\xd9\x12Q\x80l\xd2\xf5\x85\x10?M\xeaZ9\xf9\x9a\xa0\xad(\xc9Ea\xe6\xc0T\x14\xa0\xc1b\xa4\x94\xbf\x13\xd1\xfc\xb2!^\x8d=3\xef\xf4\xb5_t\xcfu\xb1\xd49\x9a,&h7\xb6A\x19\x13Q\xa0\x7f|d\x82lF\xa3\xd1\xb4&\xc0\xfc\xad\xc2\xdd\x03xGs\x8cR\xea\x86\x88\x9e\x17|M1\x94\x94\xf2\x81\x88V\x00\xf6\xa3\xd1hZ\xf6V6\xbb\xeb\x17\xe8\xf9\xc3x\xb7\xae\xf0\xaaU\xf2n\x84\xe9\xc0\x92\x99S\xcf\xf3v\xa6k\x1b\x87\xc3\xd1\x1a\xab\xbdR\x1c\xc7\x93\xc3\xe1\xb0\x04\x10\x94&\xd3=\x80\x04\xc0\xb6mv \xc7Za\x94R\xb7\x00Vh\xd8x\xd2\x1bT\xb5\xfb\xc2UX)\xccz\xbd\xfe\xc4\xcc\t\x90E\xd2\x00\xa2\xe2\x17\xd7\x964#\xa2%2\xe1*\xd7*uX\'L)Z\xae\xcd\x15\xe9}\x98\x04\xc0\xb4m^\xc9\xc6 r\xa6EI\x89\xa86\x1d"\x84\xf8\x99?CDs-\x94\x11\xd6\t\xc3\xccK\x00\xd0i\xd7\xc6hY\x87\x06yp93\xed\xc7\xba\x95o\xc1\xfbl\xcbe\xda""\x00\xab\x92h[d[\x9b~\xb9\xce9\xac\xb3\x98\x9c*ka\xe69\xb2\x0c\xe5\xb9W\xcc(u\x02X(L\xee\x8d\xaa\xb6\x0b\xca)\x93B\x1d__\xee\xaa\xca\xab\xb0N\x18"\xda\xe8\xcb\x95R\xeaI\xe7\xb1\x01\xbc\x10\xa0\x8c\xaf\xeb\xa6\xc6\xfdt\x1b\xde\xb0(\xa5~\xa0f"%\xa2 \xdf\x8f\xd1\x87\x8aR\x00{!\xc4/\xa6}\xf42\xf9r\x8c\t\x8e\x98\x83\x11\x80jv\xfd\x18\t\x08\tF\xd8\xd0\x1d:\x87\xfaB\x88/\xfaU\x8a\xf4\x9en\x91eq\x93\xaap\x00 i\xd3\xc7E\x16\xc3\x12\x9f\x01D\xb5b\x9c\xad\x8c\x04\xc0\x8aB\xfcq\xc9\x18\xea\x90R~\xd4\x99\xc7q\xd1\x8aL\xe8$\x0c\xc7\x98\xe0\x80M\'A^5\x86\x04\x1f0\xbf\xc4\x82\xaa\x90R~\x04\xb0\xd5\xee}+\x84\xf8\xd2\xa6~\xebW\x89\x15nq\xc4\nd\xee\xfaj!\x048b\xc7\n\x11\tt\x8a\x84\x8b\x14\x0e*F\xc8\xdc\xf3\x0eY\xd6\xb2\xe5\xb0\xce`Y\xea\xa4\x12fN\x88h\xd6&\x9f\x94Sg1A\xf7!\r\xca\x1eY\xa2m%\x84\xe8t\x94\x150\x9ccX\xe19J\xed\xdaQ\x0bv\x00\x02\x12h\xfdW\xee\x13\xd3\x05^\x84\xeb\x1dl\x9e\xa2\xc5!\xc2\xb7\xa2\xd1b\xf4\x1a%\xbd\xc2X^2\x82\xdf\xb7\xa7jC\xb3\xc5\x1c\x9e\xcf\xc8^\x97\xa1\xfa\xd5\xd4Z\x8c\x9e[\x8c\xce\xac\xbd\x11\xe3\xa1\xe6\x9a&\x8b1\xde\xd8y#\x06\xeb\xbf^\x18\x1e\xd8e\x0f\xd8\x7f\xbd0t\xfd\x7f\xb1\xf9\xbf\xf4\xdf\xf4*\r+\xcc\x80\xfd[\xb7Qu-\x9c0g\xa8\x8f\xae\xfb\xd8Vp8\x1c\x0e\xc7+\xfe\x05/\x8d\xc7\xfb/\xd3\x93e\x00\x00\x00\x00IEND\xaeB`\x82'
windy3 = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x05\xcaIDATx\x9c\xed\x9b\xc1n\xdbF\x10@\xdf\xd0\xbeKEz\xb7\xf2\x05q\x15\xe6l\xf5\x0b\xa2|AT\xa0\xa8|\xab\xfe\xc0\xca\x1f87+(`\xf5\x0b\xa2\x02\xbd\xf4T\xf6V@+F\xfd\x820\xf7\x16\x90\xef\t\xa7\x07.eZ\x12\xa9\xa5-J1\xc0w\x11\xac%w\xa8\xe1\xec\xcc\xce\xcc\x1a*D\xaf\xb8\xd6+\xae\xab\x94Q\x15^\xa5\xb3\x0b=\x84^\xa52*\xa2Z\xc5<bj\xc5\xe4P+&\x87\xe3JgW\xc6\x08\xcdJeT\x84\xe4\r\xe8\x88\x06\xc2)\xca\\\xfa\xdc\xec\xf3\xa1\xbe\x06\xf2-F\xe9\x01\x97\xc0\\Gt\\\x94\xa3\xef8C\xe9\xe4^ \x04\xf2\x13\x7f\xb9<\x98\x8eh\x00c\x94\x85\x9c\xf3\x83\xcb=\xbb$\xdfb~\xe1\x84/\xcc\x81&0\x87\xcd\xca\xd1w\x9c\x11\x97\x0c\xcb\xca\x18\x8fq\x9e\x92\xacR\x02\xe0\x14XH\x9fo\x9c\xe7\xde\x11\xb9\x8a\x01\xd0+\x9e!\x04X\xe5H\x9f\xef\x96c\x89u\\\x92<\xfc}\x99#\x0c\xb2\nZU\nJG\xce\xf9\xe7\x012\xeeE\xa1b`E9B\x07e\x0e\x0c\x81\xc1\x0e\x9f\xe3\x12\x18J\x9f\x1b\xbd\xe2\xdaZ\xdf\xc1\x94\x02\x0e\x8a\x01\xbb\xacbZV)\x01\x0f\xb3\x92<\xe6@\xc7\xfa\xb6.08\x94R\xc0Q1)\x99\xb7Y\r\xca\xf8\x10\x8ev\x13\xce\x1b<\x1dqQy\xde#\xf4t\xc4E\xa52\x1cq[J\x89\xa3\r*~\x96[\x84\x8ekX\x07\x08\xc3\xf0DU{k\xd3\x88\x04\xedv\xdby\x9e\xbb\x8f\xe0\x80\x8e\xf8@5~%\x8f;\x110\x0fcL\x83\xc4q\xf7\n.\x8b\x80\xa1\xef\xfb\xbf\x96y\x80\xedQi\xc4k`\\f\xd2\x1d\xd1\x93>\x85?f:\x9d~\x10\x91\xf4\x85\x8dE$J\xc7\xe28n\x8aH\x17h\xa5\xe3\xbe\xef;\xfb/\x97p\xfd\x11YN\xbe?\x94H\xcey\x9a7<\x9b\xcd.Tu\x08,<\xcf\xeb\xb4\xdb\xed\x8d\x11,s\x1d"2|\xfe\xfc\xf9\x1b\x17\xf1.\x1b\xbc\xb9\xcbD\x95\xa0\x9cn\n\xd9a\x18\x9e\xc4q\x1c\x01X\xa5\x14\xfa\x11c\xcc\xcf$Kn\xe1\xfb\xbe\xd3.\xba8*\t]\x97I*#G~\xc6\xd1N\\\x9c\xab\xef\xfboI|M3\x0c\xc33\x17\xd1\xc5\x8a)J\x08\xf7A\x8e|U\xed\xd8\xcf\xf1\xa6\xf1M?^U\'\xd9{\xb7\xb1\xcdb\xf6\x19\x89J\xcb?::Z\xac~g\x8cy\x1d\xc7q`\x97\xcf\xedT\xd61\xc7q\xecT\x1f\xda\xb6\xc1;t\x91)O~\x04\x10\xc7\xf1\x9a\xe2D\xa4e?\xef\xdc\xab\xaa-\x00\xcf\xf3\xd6\x94\xb9\x89\xe3\rQ\'\xb7\xc4p(V2n\xfe\x8d\x86|j\r\x01\x06\xd3\xe94z\xf1\xe2\xc5o\xe9\xb56L\xaf\xcd\x91\x86u\x11\t\\d\x1eo\x08\xc5\xa7(-8\\\x02\xb7\xc6\x11M\xbe\xdc.\xabo\xff\xfb\x9dE\xb3\xc3M\xb3\xd3\x12\x91\x891&\xc2Z\x11Vy\xaa\x9a\xfe\x9dn\x04\xd3\xfb\x97\xdf\x17q,\xfdr\x89\xe4!\x90\x1f\xf9\xc4\xca\xd6\xc2\x98NCD\x06v\x8f\xd2\x82;/8X\xd9\xe9vI\x96e\xd4n\xb7?\xb9\xc8,.\x86+\x01r\xc0\xc8T\x90\x9f\xf9\xbe\x7f\x03\xbc\x01\xde\xacF\xa1l\x08\xb7\xd62\xb4\x7f^\xba\x8a\xde\xd6%\x88\\\'\xaa\x08\'\xf9y{\x19\xab\x94\t\x895-(\x91\xdal\x0b\xd7\x81\xebD\x95\xf0\x00\xf9a\x18\x9e\xa9j\x00t\xb0i\x83\xb52G\xd1\x05\xcc\xff\xfe\xe3\xfd\xe7\xe3\'\x87\xdd\xfd\xba\xb3\x80e\xfa\xd2\xe2\xd6\xe7\x14\xe6Ry\x14.\xa5\xcf\xc7O\x0e\xbb\xc1+G\x13\xee\xf8\xc3\x050\xf1<o\xe8\xeap\xb3l\xcf\xae\xf7]\xa4J)Y\xac2\xc64<\xcf[\xbe\xc8\xfb\x16\xa8n\xc5;\xa0#\xde\xc3^\x13\xca\x89\xf4y\xb5Gyk\xb8\xd6|{$\xa6\xb9\x0f\x16\x14W\xe4\xf6\x82\x93b\xa4\xcf\xcd\xdeJ\x10B\xf7kHG\x9c\xbb\x04v\xbd\xf7\xa8\xcer\x16@\xaf\x8c_\xa9\x12\x97\x9ao\x03\x18\xa4\r\xf9\x95\xb6\xed\xae8h\xd7q\x13\xc5\xa5\xcdlV\xab\x04r\xce\xf7\xcb\xef\x95\xc9N\xd2\x85$\xed\xe8J\x9f\x1b{\x90 \xc21\xc3\xb7%\xce!I\x98ne\x86\x16\xf6\xb9\'e\xbb\x03)\xc5\xe7c\xb64\xd7\xf5\x8a\x97\xc0\xe5\xbd\x8a\xe5JD\xd2\x86]\x96\x0c\xac\xcc\x88-\', )H\x91\xe4>\xdb,7\xf2<\xaf[v\x83\x97\xaf\x98+\xfe\xb4\x16\xb1\xd5\xccK\x1d\x05\xd9v\x04d\xe5\x84\x05\x1b\x94\x13\x86\xe1Y\x1c\xc7\x81\xfd3\xf0<o\x90\xfd\xe1\xd6\x92\xba$\xc9c\x93d\xf7{Zf\xa3W\xa4\x98\x8f\x08\xcd\xb2k_\xdf\x91[lv>4\x94U\x8e2\x90s\xde\xa6c61\x9c\x93,\x9d\xc2^\x911\xa6\xa1\xaa\x81-R\xed\xb6\xaft(\xacr\xba(\x93\xec\x8b\xb1KhL\xb2\xe4N\xb7%\x86+\xd6\xd5tM$+S\x8c\xed`\xb2\xad\x9bX\x16c\xccG\x12k\xe9\xb9:\xd6L\xc7\xd2\xf9\x9e*\x8f\xb3\x8e\xa9\xa6\xb5\xdb\xb2\x9f\x93\xd5\x01cLc6\x9b]\xd8\xe5\xb6\xc4\xf3\xbc\t\xdc\x16\xca]x\xb4\xe7|s\x96DOU\x87"\xb2\xf1\xb4\x97k\xeb\x04\x1e\xa7b\x02\x80\xe9t\xfaru`\xb5e\x92\x92\xb6ND\xc4\xb9\xdd\xfc\x18\x153\x06\x10\x91\xcb\xd9lv\x11\x86\xe1I:\x90*`\x03-\x00\xcf\xf3"W!\xd59_\x1b\xee\xab8\x8aj\x8c),\x83d\x1b\xfd\x99\x03\x00\xce\r}\xa8\xd0b\xe4\x9c\xa7U\x9d\xcf\xf5}\xff\x95\xaava\xbd\x80&"\xc3l\x91*s\x00`\xed\xda"\xbe\xda}\xcc.\x08\xc3\xf0\x99\xdd\xc34]\x8e\x8bdy\x8c>\xc6\t\xab\x94\tIJ\xe0t\\$K\xb5\xff}r\x00\xd2\x83\x8aq\x1c\x0f\x80\xa6\xaa\xceE\xa4Wv\x9e\xdc\xa5d\x8c\xb9\xe6+(1>\x90\x00\xe8\x96\xe9\'\xa5\x14YL\xe7\xbeOs`\x16$\x19\xf7\xe5C;\x0555555555555555555\xfb\xe3\x7f\xf2\xcfao\xb7\xf3\xf5\xf6\x00\x00\x00\x00IEND\xaeB`\x82'

rainy  = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x04\xdaIDATx\x9c\xed\x9b?L\x1bW\x18\xc0\x7f\x1f\xa6\xa1\xe9\x82\xd5\xacD\xf5D\xa5.\xb0\xb6\x1d\xb0J\x96*T\xf5\x12\x96\xa4\xc2\x91\x10\xf6\x06R\x97.M\x0cSFw\xbbCH\xbd*\xd9*U\x1e"\xbatp\x97f\x8a\xea\xa8,\xcd\x04RE\x16"9J\x86\x10a\x7f\x1d8\x10\x05\xfb\xee\xdd\xdd;c\xe8\xfd6\x8b\xe7\xf7>\xfd\xfc\xdd\xf7\xfe\xdc\x032222222\x86\x1c\xb1\xd9\x99\xae3\x83R\x0c\x18\xad)K\xfcns\xcc\xb4H,F\xd7\x99\xa1K\x19\xa1l\xfe%<F\xf0\x86YRl1~v\xd4\x81\xe9\x04\xe3\xb7\x10V\x86QPd1\xea2\x0e\xd4\x80\x15\x8bq\xd4\x81\x9aTxe\xb1\xcfDD\x12\xe3Ki\x92,K\xfa\xd1\x02\x8aAr\xd6\xd7\xd7gz\xc6\xa5\xda\xaaT*V\xa5F\x13\xe3\xf0c\xa4Z\x12\x15\xc5\x93*w\x8f>\xba\xae;\x0e\x948\xcc\xce\xb0\x1f\xa3\x054r\xb9\x9c\xb7\xb8\xb8\xb8\x934\x14c1\xear\x9f\xc3G(mjRa\xd5u\xdd\x05U\xad\x89H!F\x1fu\xa0\x96$\x8b\x8c\xc4\xf8\x85\xb6\x19w\x90\xa8l\xb2\xdc\xf8\x87OJI\xfaP\xd5m\xa0T\xadV\x9f\xc5\xf9\xbe\x99\x18\x97?I\xa7\xae\x9c\xe1\x0f\xe6\xd9b\xd6Vwm\xa0\x10\'sF\xc2\x1a\xa8\xcb\x02\x03\x92\xd2d\xc1\xa6\x14\x80<\xd0\xf4kU$B\xc5\xa0\x03\xa9+\xfc\xc5\x17<\xe7\xb34\xba\x9e\x06\xbc\xa8_\n\x14\xa3\x0eS\x08\x85\x98\x01\x19\xf3\x9ak<\xe5\xab4\x87(\xf5\x9b\xea\xfb\x11\x9c1B\xa2\x02h\xcaS\xe6x\xc7\x07\xa9\x8e\xa1\xaa\xf5(\xed\x83\xc5\x04m\x08-\xb2=\x98\x126\xed8\xce\x94i\xe3\xb0\x8cI=\xe2]&S\xcf\x96#D\xa4l\xda6\xac\xf8\xe6\x93\x85\x12\xce\x0b&\xd3\x1e\xe2\x18U5\xfe\xa1G\xd3\x0cd\x8f\tv\x98f\x97I^r}`\x99\xd1\x0f\x11)\x9a\xb6ME\xcc\x1e\x13l1\x9b\xd6\xf4;\x10\xac\x8a\xd9\xe7*[\xcc\xa6=\xf5\x0e\x84`1J\x131\x9b\x99\xf6\xb9\xcac\xbe\xe5%\xd7m\xc4u\xee\x84\x15\xdfm\xd3\x8e\x9e0\x7f\x11\xa4\xb4L\x1b\x86M\xd7M\x93NR\\\xce\xdbf\xdb\xb4a\xe0\xee\xda?\xb1k\x07\xb5\xd9c\x82_\xf8\xdet\xbcsEU\xb7E\xa4\x91\xcb\xe5\xeaa\x87Y\x81\x19\xe3\x1f36\x82\xda<a>F\x88\xe7\x83\x7f\xe8\xb5\xd2\xe9tZ\xae\xeb.\x04\xb5\r\xdf]\x0b}\xf7\x18\xbbL\xf2\x82\x8f\xa3\xc67\x0c\xe4\x01\xcfq\x9c\xe5~\rB\xc5\xf8\xaf6zf\xcds>\x8d\x1f\xda\x10 "u\xc7q\xbe\xee\xf5\xb7\xf0\x8c9\xa4L\x8fZ3\xa0\xcd_\xaa\x88\x88\xd7\xeb \xcbH\x8cTxu\xfa\x08b\x90\x9b\xbf\x94\xc9\xd3\xe3\x1d\x99i\xc6\x1c=Re\xfc\xccy\xcd5[\x81\r\x03\xf1\xc5\x00H\x85\x9f\xfc3\x9a\xf6\x9b\xcb%&\x7f\xfa\x84/\x92\x18\x00\xa9\xf2\x0c(\xbc\xe1C\xe3U\xe4E@U\x8b\'?G\x16\x03\x875\xe7o>\x0f\\\xdf\\tb\x89\xf9?\x10[\x8c\xaa^\xaaG\xe94\xb1\xc5\x8c\x8e\x8e^*1"\xd2<\xf99\xb6\x98\xc5\xc5\xc5\x1d\xff\xfd\xf0\xa5\xe0\xf4\x13\x90\xa8\xc6\x88\x88\x97(\x9a\xe1\xa1q\xfa\xfdv"1\xb9\\\xceK\x14\xce\x90 "g6\xca\x89\xc4\xf8g\x1a\xb5$}\x0c\x01\x8d\xa5\xa5\xa53w\x00\x13O\xd7\x95Je\x95\x08G\x86CF\x0bz\xdf\x10\xb3\xf2\x96 \x97\xcb\x95:\x9dN\x8b\x01\xbc\xa0\xb3\x85\xaaz\xd5j\xf5n\xbf\xbf[Y\xe0\xf93T\x91\x8b\x919mU]\t\x92\x02\x96o\x86\xfb\xe7\x1a\x1e\x0c\xe6\x96D\x14\xfc\xa5E]D<\x93\x1bVV\xc5\x1c\xe18\xcer\xafJ?@Z@1\xf5\xcb\x89qp]w\\U\xcb\xc0J\xcc\x9b\x97qi\xabj1\xee\xa5\xc4#R\x13s\x12\xff^JQDz\x16g\x11iv\xbb\xdd\xbc\xbf`LR\xc0[\xaaZN*\x05\x06$\xc6\x14\xc7q\xa6\xfc=K\x1c9\x89\x1f\x9f\x93\x0c\x95\x18\x88]\xc0k\xfez\xca\x1aC\'\xe6\x88\x8d\x8d\x8d\x8f\x0e\x0e\x0ej\x1c>\x82\x85\x1eM\xac^\x91\xcf0$\x95\x8c\xb9y{u\x01\xd1rWFj\xbf>\xbcg\xfc\xbfHsw\xd6\xa6\x94n]\x91\xc6\xe6\xa3\xfb?D\x19\xf3\xc6\xad\x07\xe3W\xc6\xdez\x08\xed\xcd\x87\xb5\xc0\xc5\x9b\t\xd6\x8f6o\xde^]`\x04\x0f\x91\xa2D\xb8\xf36wgmJ\xa5\xdbD\xa4\x08\xff=\x98\x0e\xc3\x97\xd2\x14\x91\x92XZ\\Z\x15s,\x05P\xd43\xfd\xd5\x8f\xa5 yUm\xbd\xdb\x7f\xbfl:\xe6\t)\xd3\xa0m\xd1\x91b\x8c\xd0\xcf`\xedQ:#\xc50\x9d{H)\xfe\xf6\xf3wFSn/)\x8f\x1f\xddK\xbc\x86\x01K\x19\xf3\xe57k3q\xa4\xdc\xb8\xf5`<\xae\x14\x80\xb1\xb1\xb7\x8d4\xa4\x80%1#]-@4)\x00W\xde;\xc8\xc7\x95\x02\xa0B!\r)\x19\x19\x19\x19\x19\x19\x19\x17\x82\x7f\x01P\x95\xc7b\xa8\xe6\r\x9b\x00\x00\x00\x00IEND\xaeB`\x82'
rainy2 = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x05\x0bIDATx\x9c\xed\x9b=o\xdbF\x18\xc7\xff\xcf\xb9\x8d\xbbI\xc8\x17\xc8QS7\x0b\xb4<\x9bC\x96"\x01\xaa%SRX\xfd\x04\xd5\xd8)\x91=\xa5\x93\xd5OP\x02\xc9\xd6E\x05\x8ax\xe9\xa0z\xab-\x08\xf4\xe0\xd5\xa2\xb7\xc2^\x18\x180\xd2\xa2\xb8\xa7\x83N\x81"\x91\x14_N\x12\xd5\xf2\xb7\x89w\xe4\x9d\x7f\xbcw>\x06JJJJJJJ\n\x0e\x99|\xd8p8\xdcWJ\xd5\x89\xa8JD=\xdb\xb6/L>\x7f\x95\xe4\x16\xa3e\xb4\x00\xb4\x00\x80\x99\xbd\xad\xad\xad\xa6m\xdb\xd7y\x9f\xbdN2\x8b\xd1B:\x00\x9c\xc95f\xf6\x88\xc8i4\x1a\xef\r\xd4m\xadd\x12s~~~LD\xed\xe9k\xff%)@J1\x83\xc1\xa0\xc2\xcc}"\xaa\xcf\xa6\t!\xea\xcb\x1eS\xa4\x94\xfba\xd7\x85\x10\xde\xd5\xd5\x95\xd1\x17\xf2Y\x9a\xcc\xba\x95\xccIa\xe6\xee2\xa4\xd4j\xb5\x8aR\xaa\t \xb4\xdc\tJ)H)=\x00="rG\xa3Q\xee\xf1-q\x8b\xd1cJ?,M\x08!M\x0f\xb6R\xca\x03\x00\x1d\x002\xc3\xed]!D\'O+J$f0\x18T\x00\xf8\x00\xaa!\xc9n\xa3\xd1\xf86k\x05\xc2\x90R\xbe\xc2XJ\x1e|"j\x8eF\xa3L-Y$\xcc\xd7C\xb8\x14\x08!:Y\n\x8eBJy\x8c\xfcR\x00@2s\xbfV\xabU\xb2\xdc\xbcP\xcc`08\xc0\xd4\x94<\r3{&\xbb\x90\x94\xf2\'\x8c\xc7\x13ST\x95R\x99\xe4,\x14\xc3\xccq\x15\xed\xa7-0\n)\xe5w\xd0\x8bD\xc3\xd4\x95Rn\xda\x9bb\xc5\x0c\x87\xc3\x9d\xb0\xa9y\x02\x11yi\x0b\x0c\xc3\xb2\xacG0\xd3}\xa2hFM\xf5Q\xc4\x8aQJ9\xb17\x0b\xe1\xa7),\nf\xee b\x0c3H7M\xe6E]\xc9\x89KTJ\x19i1\x00\x9a\x86\x9e\x13G\xdd\xb2\xac\x9d\xa4\x99\x17\x89\x89}\x8b&\x96\xff\xba\x89/\xbb\xb5\x00\x00\x98\xb9\x954o\xac\x18f\x8e\xabp\x90\xb4\x90\x058\x86\x9e\x93\x84\xc8\xf1r\x96\xd8-A\xdc\xc0\x0b`a7\xb2,k\x87\x99\x9b\x18\xff\xf1u\xac\xa8e\xc4\xe0$\xcd\x98j\xaf\x94\x14-\xa4\x9d\xa6\xe9\x16\r\xa3b\xf4\xa6\xaf\xadg\x99\x8df\x91\x98>\xa2W\xbd\x9ft\x0b-\xa5\x8f\x14\xfd\xb8\xc8,\x9a\x95\xfc\xa8\x84\xd9\xf1G)\xd5E\xf1\xa5$^^,\x12\xd3\x8fK\xd4\xbb\xeee.\xe7M\xe3\'\xcd\xb8HL/\xf6f!&\x8b\xa6T\xab\xca5R\x97R\x1e\xeb-H,\xb1b\xf4\x02\xce\x8dJgf\x87\x997E\n0>\xf4j3\xb3\xa7\x0f\xc2"Y\xb8\xbb\x8e;o\xb9\xb8\xb8hc\xb5\x0b4ST\x01\xb8z\x08\x08e\xa1\x18\xdb\xb6\xaf\x89\xa8\x13\x96vzz\xba\xee\x05[^\xbaR\xca\xaf\xc3\x12\x12\x9d\xe0\xed\xee\xee\x1e"d >;;\xcbW\xadb\xe0\x86\x1dd%=\xda\x84\x10\xa2\x85\xa9\xfd\xd1\xe5\xe5%\xee\xef\xef\xcdTm\xbdT\x95Rs\x87q\x89\xc5\xd8\xb6}\xad\x97\xf8\x01\x00\xdc\xdc\xdc\x98\xab\xda\xfa\xc9.\x06\x00\xf6\xf6\xf6~\x11B8\x00\x82\xdb\xdb[Cu*\x04\xd5\xd9\x13\xbeTb\x00\xc0\xb6\xed\x0b!\x84sww\xe7\x1b\xabV1p\xa6\x7f\xa4\x16\x03\x8c\xe5\x9c\x9c\x9c\xb8&jST2\x89\xf9?\x90G\x8c\xa9\xf3\xdeB\x92Y\x8c\xa9O\'\x05\xa2?\xfd#\xb3\x18\x1dQ\xe0\xe7\xacLa\x10B|\xf2\xa2\xf3\x8e1n\xce\xfb\x8bBo62"\x97\x18"rsU\xa78\xcc\x9d\x10l\xe5yZ\x10\x04\xef\xab\xd5*\xb0\x99;\xec\t=\xdf\xf7\x7f\x98\xbd\x98{\xba\xf6}\xff\x10\x9b;Cyz\x0f8\x87\x91\xaf\x04D\xd4df\x0f\xeb\xffn\x94\x06\xd7\xf7\xfd\xc8\x80\'#\x0b\xbc\xd1htMD\x0e6\xa3\xe5\x04\x00\xdaqR\x00\xc3\x91\xe1\xfa\x13\x8a\x8b\xd5|\xa4O\x8b\x8fql\x9e\x9b$6\xcf\xa8\x98\t\xfa\xc8p\x9dg\xc1\x9e\x10\xc2\xc9\x13\x9c\x98kV\x8a"\x08\x82?\x1e>|\xd8e\xe6?\x01|\x89\xd5\x8e=\x81\x0eJ\xcc\x15\x02\xb7\x94\x163\x8b\xfe\x96\xed ZP_\xa7\xb91y\x92\xe0\x11Q+k\xa4\xe64+\x11\x93\x14-\xb0\x8flrrw\x9fi\n%\x06\xc8<\x80w\xf4z\xca\x18\x85\x133\xc1\xb2\xacG:j\xc2Axt\xb8\xd1\x10\xf9\x92\x84,\xa5\xc5<y~x\x00\xe2\x96"\xd19y\xf3\xf2\xf7\xa4\xf7=}q\xb4\xc3P]\x06\xf5\xde\xbd}\xf5c\x9a2\x1f?{]y\xb0\xfd\xc1\x05!x\xf7\xa6\x93;\x84\xdf\xf8\xd1\xe6\x93\xe7\x87\x07\x10pA\xe4\x10s\xe2\xb0\x90\xa7/\x8ev\x98T\x1fD\x0e\xc0N\x9a2\xb5\x94>\x115\xc9\xd0\xe2\xd2\xa8\x98\x8fR\x000\xd8M\xfa\xd6?J\x01U\x99\xd9\xfb\xfb\xaf/ZI\xcb\x9c\x92R\x078 \x16N\x86\xaa\xcfa\xac+\xcdII\xd8\x9cC\xa48\xbf\xfd\xfc}\xa2)7L\xca\xafo_\x1a\xf9\xbf)#-\xe6\xabo\x8e\xf6\xb3Hy\xfc\xecu%\xab\x14\x00\xd8\xde\xfe\xd0[\x86\x14\xc0\x90\x18\xa1X\x02\xe9\xa4\x00\xc0\x83\xcf\xff\xa9f\x95\x02\x00L\x90\xcb\x90RRRRRRR\xb2\x11\xfc\x0bsL\x02\xcf5\x1d\x06\xfc\x00\x00\x00\x00IEND\xaeB`\x82'
rainy3 = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x04\xa2IDATx\x9c\xed\x9bOh#U\x1c\xc7\xbf\xbf\xd7\xb5\xed\xeab\xa6\x8bJ\xb5\xb0}\x93\xc3\xd2\xcb\xd2\x88\x08{\xdb\xa0\x1e\xbc5\x1e\x04\xf1\xb2Q\x04\x8fF\xf0\xe0^4\xe2A\x05\xc1x\xdb\xe8\xa2\x03\xea=\x87\xc5\x8b\x15\xe2\xad h$\xb0\x14\x16\x93\xa7\x1e\xa4\xfea\'\xb5eSh\xe7y\xc8t\x89\xd9L\xf2f\xde\x9b\xc9\xd4\x9d\xcf-\x9d\xf7\xe6\xf7\xfa\xc9\xfb\xff^\x80\x8c\x8c\x8c\x8c\x8c\x8c\x8c\x8c\x8c\x8c\x8c{\x18\x9au\x01\xc2\xc09\xbf4\xee\xef\x8c\xb1V\xa7\xd3\xe9\x99\x8c\x95j1\xf9|>\xe7y^\t@\x05@aJ\xf2\x16\x80\x06\x119\xddn\xf7\x17\xdd\xd8\xa9\x15\xc39\xbf\x0c\xa0\n\x80G\xc8^c\x8cUujQ*\xc5p\xce\xdf\xc6@\x8a\x0e\x82\x88J\xddn\xf7\xa7(\x99S\'\x86s\xfe\x11\x06M\xc7\x04.c\x8cG\xa99\xccP\x01\x8c\xc09\xff\x1c\xe6\xa4\x00\x80\xe5y^3\x9f\xcf\xe7\xc2fL\x8d\x18\xce\xf9k\x00\xca1\xbc\xba\xe0y\x9e\x136S*\x9a\x92m\xdb\xabR\xca\x16\x00+\xc60E!\xc4w\xaa\x89SQc\xa4\x94U\xc4+\x05\x00ja\x12\xa7B\x0c\x80R\x021\n\xb6m\xaf\xab&\x9e\xb9\x18\x7f6\x1bwm\x01\x00H)\xcb\xaaig.\x06@1\xc1X\xd3f\xcfw8\x15g)l\xdb^\x97R\x960\xf8\xe7\x0bH\xa8fL\xa0\xa8\x9a0\x161\xbe\x90J\x98\xaa\x9b6\x8c\x8a\xf1\x17}\x15\x7f\x949\xd1\x18\x13\xe3Ki"D;N3\xc6:_\xcf\xf3jH\xbf\x94\x96jB#bb\x9c\xce\x9bF\xa8&\x9c\xd3\x8d\xe4O\x9a\x1a\xba\xefI\x88E\xcb\xb2\xf8\xd2\xd2\xd2\xb6\xeb\xba\x13W\xdc\xda5FJ\x19j\xaa=c8\x80\x8a\x94\xb2\xe5o\x84\x05\xa2\xb5\x88\xf4g\xadM\x9dw\xcc\x98\x8a\x10\xe2\xe3q\x0ftkLY3\xff\xac\xa9q\xce7\xc6=\xd0\x15\x93\xc4\xe2/n\x9cq\x1bY\x91\xc5$\xb9\xf8\x8b\x19\xcb\xf3\xbc\xbbv\ruj\x0c\xd7\xc8\x9b621\x01X\xa3\x87yi\xd8vH\x0b\xc5\xe1\x0f\x99\x98\x0021\x01\xe8\x88Q^\x90\x9dD"\x8b!\xa2\xff\x9b\x98\xe6\xf0\x87\xc8b\xfc\x1b\x05B\xb30\xa9\x811\xf6\x9f/Z\xb7\x8fq4\xf3\xa7\x85\xc6\xe8\xf9\xb6\x96\x18"r\xb4\x8a\x93\x1e\xee\xda!\xd0\xda\x8fq]\xb7gY\x16\x90\xec\x11\x88i\x1aB\x88\x0fF\xff\xa8=\\\x0b!\xde\xc1\xc9\x1d\xa1Z\x8c\xb1\xf2\xb8\x07F6\xc3\x89\xa8\x94\xc0\xa1\xbci\x1c!\xc4KA\x0f\xb5\xb76\x01\xe0\xd6\x87\xae\xf5\xc4\xa3\x07k\xdb\x7f\xce\xaf\xfd\xb5o\xe4\x95q\xe2\x02xS\x08qeR"\xad\x1d<y\x15\x1b\x00*\xa0A\x1f\xb3\xdbgx\xe3\xfaC\xf8\xe6\xe6\xfd:\xaf\x8d\x0b\x81\xc1\xdd<G\xe5\x86U$1\xf2\x1aVq\x08\xe7X\xc8(\x9f}\xff \xde\xdd<\x1b\xe5\xd5\xa6h1\xc6\x8a:\x97\x13C\xd7{Y\xc7eH4@X\x0bJ\xf3\xf8\xca\x01^~r\x17\x0f\x9f9\xc2\xcf\x7f\xdf\x87\x7f\x0e\x12]\x92\xb9\xfe\xa5D\xad+\xad\xa1j\x8c\xfc\x04\x97 \xc3o~\xdf\xd8\x99\xc7\xd6\xaf\x8b\xd8\xed\x8f\x17t\xf1\\\x1f\xbb\x07\x83f\xa8)\xb1ED\xe5\xa875\x87Q\x16#\xafb\x1d\x84&b\x1cyn\xec\xcc\xe3\x85\xaf\x96\xa3\xca\xd1n>\xc3(\x89\x91u\xe40Xd\xc5~\x04\xeb\xdef\xe2\xa9\xfa\x8a\xb8u{\xae\x18"[\xd5\x9fO\x19C\xf5\xabQ\xb9\xb2n\x04\xeb\xb4\xc7\x7f\xa8\xfc\xd6$"\x8e\xc1ZL\x04$m\x01\xa8\x12\x117-\x05P\xa81\xf2\x1aVq4\x83U\xf4\x1c8\xbd\x02\xed\xdf\x04De\xfa\xcc\xf7\x10\xd5\xb0\x83\xfa\xe6N\x01\xdf\xfeQ\xc0\x8b\xe7\x9a\xb8\x90\x13\xca\xf9:{\xcb\xf8\xb4\xfb,.\x9e\xdd\xc6\xc6c[U\x00\x813\xd3Q\x9ey\xfe\xfd\xdc\xfcB\xdf\x01\xc1\xfd\xfa\x8b\xaar\xbe &6%YG\x0e\x14\xee\xb4qs\xa7\x80\xda\xcd\xe7\xd0\xee\xd9\xe8\xec-+\xe7\xeb\xec-\xe3J\xbb\x8cv\xcfF\xbb\xc7\x01B\xd9\xef\xdb\xa6\xe2Ki\x12Q\x89\x0c\x1d\x02N\xebcB\x059\x96\x02\x00O?\xf2#6V\xb6\x94\xf2\x1dK\xd9?:\r\xfb\x81\xdfQ9\x7f\xe7\xf2\xc4\xd4\xf8CR\n\x80tI\xb2b\x982\x071Y\x8cT\xdfN\x18\x95\xf2\xfay\xb5\x9b!\xa3R\xde\xbb\xe0\xe0\xcc\xa9\xbeR\xfcqR\xae\x7f\xf9\x96\xf6\x1c\x06\x98\xd6\xc7\x90\xdaH\xd4\xee\xf1HR\xf6\x0e\x17\x83\xa5(\xc4_X\xe87\x10\x83\x14`zSR\x12\xb3\xd3\x1f\xcc\xf9\xc2H\x01\x80\xfd\xc3\xc5`)\n\xf1%\x81\xc7!\x05\x982\\\xcb:\xa4\xc9`Q\xa0Wg\xf3C\x90\xec\xc0-\x80i}L1\x99bdddd\xdc[\xfc\x0b?[\x94\xb9}\x90\x83\xc7\x00\x00\x00\x00IEND\xaeB`\x82'

cloudy =  b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00F\x00\x00\x00F\x08\x06\x00\x00\x00q.\xe2\x84\x00\x00\x04rIDATx\x9c\xed\x9a\xc1k\x1bG\x14\xc6\xbf\xb7kl\x1cd\xa4B((\xb4T\x10\xb0\xe9I\xea\xda{\xb6\x9a{\x88\xae\xe9\xa5:Y\xb9U\xd0?\xc0\xea=\x05\xf5f\xf9\xa4\xfe\x05\xdd\x9csQ\xcf\x1a-\xca\xa9$\x10\xaa\x90PC\xc1TAiB\x8c\xb4\xd3\x836\x8deI\xbb3\xbb\xb3\x9b5\xcc\xefh\xcf\xbe7|\x9ay3\xf3\xcd\x00\x1a\x8dF\xa3\xd1h2\x0e\xa9\x0c\xc6Oq\x08\x8ej@\xb6\x1e\x1d\xe1w\x959\x93"\xb60\xfc\x14\x87\xf0P\x07\xa1.\xfe\x11\xba0\xd0\xcd\xb2H\x91\x85\xf1GG\x1b@%F\xfe!\x08\xcd,\n$-\x0c\xef \x0f\xa0\x05\xa0\xa9\xb0\x1fm\x00-j\xe0\xb5\xc2\x98\xb1\x90\x12\xc6\x17\xa5\x87x\xa3d\x1dC\x00\xd5\xac\x88cH\xb5\x8e?u\x82\xa8\xf8\xf13\x81\xf0\x88\xe1\x1d\x1cc>\x85\x92\xa6E\r\xfc$\xd2\xd0u\xdd\xc3\xab\x7f\xb3,KI\xbd\x12\x12\xc6/\xb4=\x15\t\x85 T\x83\nr\xbf\xdf\xbfGDm\x00\xa5\x95\x9f\x13\xb5\xf6\xf7\xf7\x85\xc4]\x87\xd8TJ{\x88\x07\xe4s]\xb7LD]\xac\x11\x05\x008\xe7-\xc6\xd8\x0fq\xba\x10*\x0c\xef\xe0{$WW\xd6Q\xf1\xf3.\xc0\x18\xcb{\x9e\xe7\x00(\x08\xc4h\xaf\x9aj\xa2\x84\x8f\x18\x9eJ]\x11\xcaKDM\x04\x8c\x94\xabx\x9e\xb7\x14C\x94@a\xf8\t\xca \xf1\x8e(\x85P\xe2\'(/\xf4\x87\xf3\xbad\x94\xaa\xeb\xba_EI\xbf\x11\xf8_B-J\xd0\xb8L\xcd\x1c\xce\x8aG\x18\x17\xaaC\xc6n\xc5\rW\x02\xf0B\xf6\xa3`a8\xaaj\x8f\x99\xe1\xbc\xdd\xde\xc5\xf3\xdb\x0fq\xb1\x15[\x90X\x04\xd7\x18J\xb7\xe8N\xcd\x1cF\xa5c\xd5\xa2\x8c\xa2|\x14V|E\xaa\xbf2^}\xf1#\xde\xdd\xd8S\x1as6\x9b9\xae\xeb\x96\xc3[."w$H\x90\xf7\x9bE\x9c\xdf\xbc\xab<.\x11U<\xcf\x1b2\xc6\x96\x96\xff 2#\xccdg?\xe9\x14m\xc6X^\xb4qf\x84\xb9\xd8L\xbc\xd8\x16\x00\xf1U6X\x984\xcfG)@D%\xd1\xb6a#f\x14\xa7#2\x98\xb3IZ\xa9\x84\x08[\xae{\xe9t\x03(\x8c\x93OED\x8eh\xdb\xb0\x11#\x1c(.[\x17g\xc8M\x06I\xa6p,\xcbz"\xda8P\x18\xdffLM\x9c/_\xfe\x0cs\x9a\xc8\x94r\x00\x89[\x0c\x08\x18Ui\x9bT\xef7\x8bx~\xfba\xdc\x8d\xde\x08\x1f\xeb\xa3spp\xf0\x8bl\x001\x07\xaf\x83\xdf \xb1\xd4\xc5e\xba\xf1\x99\xf3\xa4\xfcx\xec\xe7\x94\xde}\x1b\x86Q\x91\x996\xab\x10\x15&\x8f\xf9/\x90\xc6\x11a\x0c\xa0D\r\xbcf\x8c\xe5\r\xc3\xf8\xff\xbc\xe6y\xde\x10\xf3)\xb1\xce\xe1\x1b\x1b\x86QS\xe1\xfb\x8a\x9b\xe1W\xa6\xd4\xdb\xed]\xfc\xfd\xf9\xfd\x95\xdb\xf8\xdcd\x80[\x7f\x9db\xe7M\x84b\x1a\xe2\xf7\x02s{\xd3\xf3\xbc\x05\xd3\x8a\x88zD\xd4\xb5,K\xdabX\xdd\r\t|\xbb\xb1=5s\x85g\xbb\x9d\xd0:\xb0\xfb\xb4!#\xce\x18@\x93\x1a\xf8U\xa6OI!\x7f\x13y\x82\xf2\xd3\xbd\xce\xf0\x8d\xc0\xd9\xc6\x9cN\xf0\xf5\x1f\xdfa\xeb\xe2,\xac\xe9\x18\x1cUz\x80XuA%\xd2g\xa5\xc1\x01\xab\x88\x88\x02\x00\xb3\x8d\x1d\x9c\x15\x8f\x82\x1b\xcd\xa7g)K\xa2\x00\x11\x84\xe1\x9cK\xddY\x9f\xdf\xbc\x8b\xa9\x99[\x11\x08#p\xd4\xe8\x01\xbe\xcd\xca\xb5\xece\x02\xadM\xffb\xab\x86Eg^\xda\xd5{\xb7\xbd\xf7\xb1\xd6|x\x02\xd2\xc8\xde\x0b\x87\xcb\xac\x14\xc6\xf7-\xbaP\xb4w\xf9\xa7p\xa7\xb9\xf3\xef`\x98\xc5\xe7\x1e\xebX7\x95\xbaP\xb8\xa1;/\xde\xbf6/\xa9>\xb0$\xcc`08\x86\xe2]\xeel6\xab\xcb\xb8gY`a\xb9\xf6;?B2;\xdc\x91\xbf+\xcd\xd4\xea\xb3\x8e\x85\x11\xc39\xaf"\xb9m\x7f\xc9\xbfw\xbe\x16,\x08s\xf9\\\x92\x10\xa5~\xbf\x7f/\xe1\x1cJH\xdd\x0cOA|%d\xe6\x96 k,\x08#\xe3\x89F\xc5\xb7\x0e2\xcf\xd2!\x921\xf6\'$\xde\xa0\xc8\xc09\x1f\xda\xb6\xfdM\x12\xb1U\xb34\x95d\xcfB\x12\x8cL\xd3\xac\'\x14[9K\xc2\xd8\xb6\xfd\x88s^\xc3\xdc\x1fQ\x85\x03 \xb6\xdd\x98&k\xfd\x18\xdf%s\x10qZq\xcek\xb6m?\x8a\xda\xb1OM\xa8Q\xe5\xba\xee\xa1\xbf\xf1\x030/\x9eDTG\xc0\xb1A\xc5s\xd2OM\xe4\xf7R\xfes\xd1\xab\x8f\x05{\x9c\xf3\xf6u\x1e)\x1a\x8dF\xa3\xd1h4\x1a\x8dF\xa3\xd1h4\t\xf3\x1f7\xeel8\x8a\x83\xcc\x90\x00\x00\x00\x00IEND\xaeB`\x82'

weather_status = {

    "Clear" : [clear, clear2, clear3],
    "Windy" : [windy, windy2, windy3],
    "Cloudy": [cloudy],
    "Rainy" : [rainy, rainy2, rainy3],
    "Unknown" : [no_record]

}

def telescope_org_weather(data, weather):
    data = data.content

    if data in weather["Cloudy"]:
        status = "Cloudy"
    elif data in weather["Windy"]:
        status = "Windy"
    elif data in weather["Clear"]:
        status = "Clear"
    elif data in weather["Unknown"]:
        status = "No record"
    else:
        status = "N/A"
    return status

#print(args.connect)
# Use 'with' to ensure the session context is closed after use.
if not args.bypass:
    try:
        with requests.Session() as s:
            print('_________________________________________________\n')
            print('Authenticating... (takes about 10-15 seconds)')
            print('_________________________________________________')
            time_start = time.time()
            p = s.post('http://research.iac.es/proyecto/muscat/users/login', data=payload)
            time_end = time.time()
            elapsed = time_end - time_start
            if elapsed < 2:
                print("\nlogin failed: wrong username/password\n")
                sys.exit(1)
            # print the html returned or something more intelligent to see if it's a successful login page.
            obs_path = 'http://research.iac.es/proyecto/muscat/observations/export'
            targets_path = 'http://research.iac.es/proyecto/muscat/stars/export'
            path_list = [obs_path,targets_path]
            r = [s.get(path) for path in tqdm.tqdm(path_list, desc=f'Downloading past observation and registered targets data... (about 15 seconds)')]
            obs_text = r[0].text#.encode('utf-8')
            targets_text = r[1].text
            #column = ["id","telescope","observer","weather","seeing","temperature","start_time","end_time","flats","bias","exposure_time","lightcurve","quicklook","comments","files","star_id","code"]
            obs_reader = csv.reader(io.StringIO(obs_text), delimiter=';',quotechar='"',
                                quoting=csv.QUOTE_ALL, skipinitialspace=True)#,index_col=column)
            targets_reader = csv.reader(io.StringIO(targets_text), delimiter=';',quotechar='"',
                                quoting=csv.QUOTE_ALL, skipinitialspace=True)
            observations_df = pd.DataFrame([row for row in obs_reader])
            targets_df = pd.DataFrame([row for row in targets_reader])
    except requests.exceptions.ConnectionError:
        print('Bad connection with the server. A simple retry should fix the issue. Make sure that you are connected to VPN.')
        sys.exit(1)
if args.obsdate is None and args.obj != "all": #日付指定せず、かつ特定の天体を探している場合
    obsdates, weather, comments = find_obsdates(args.obj,observations_df,targets_df)
    #print(obsdates)
else: #日付指定をしている場合(天体指定の有無に関わらず)weatherとコメントは後でprint_obslog内で取得するのでとりあえず空の箱を作る
    obsdates = [str(args.obsdate)]
    weather, comments = [""],[""]

def shorten_url(url, url_shortener):
    try:
        url = url_shortener.tinyurl.short(url)
    except requests.exceptions.ReadTimeout:
        url = url
    except urllib3.exceptions.ReadTimeoutError:
        url = url
    except pyshorteners.exceptions.ShorteningErrorException:
        url = url
    return url

#returns the observation date according to input
def obs(obsdate):
    year = 2000 + int(obsdate[0:2])
    month = int(obsdate[2:4])
    day = int(obsdate[4:6])
    return {'year':year,'month':month,'day':day}

def past_midnight(int):
    return int >= 0 and int <= 12

#returns the time of an exposure as datetime object
def round_ut(obsdate, x):
    if int(x[0:2]) >= 0 and int(x[0:2]) <= 14:
        obs_time = datetime(obs(obsdate)['year'],obs(obsdate)['month'],obs(obsdate)['day'],int(x[0:2]),int(x[3:5]),int(x[6:8])) + timedelta(days=1)
    else:
        obs_time = datetime(obs(obsdate)['year'],obs(obsdate)['month'],obs(obsdate)['day'],int(x[0:2]),int(x[3:5]),int(x[6:8]))
    if int(x[6:8])  >= 58: #takes care of exposure times that have not been rounded up due to the microsecond lag between CCDs
        #JDで下二桁clipをすると、10秒間なまされる
        obs_time += timedelta(seconds=5)
    return obs_time.replace(second=0, microsecond=0) 

def round_jd(jd):
    if len(str(int(jd))) == 4:
        return float(str(jd)[0:8])
    elif len(str(int(jd))) == 5:
        return float(str(jd)[0:9])

def unique(sequence):
    seen = set()
    return [x for x in sequence if not (x in seen or seen.add(x))]

def take_exposure_log(obslog, exptimes_list, exp_change_time_all_ccd, jd):
    exptimes_mask = obslog.duplicated(subset=4)
    exptimes = np.array(obslog)[~exptimes_mask]

    exp_change_time = []
    
    if jd:
        exp_change_time[:] = map(lambda x: round_jd(x), exptimes[:,3])
    else:
        exp_change_time[:] = map(lambda x: round_ut(obsdate, x), exptimes[:,4])

    exp_change_time_all_ccd.append(exp_change_time)
    exp_value = []
    exp_value[:] = map(lambda x: f'{x}', exptimes[:,5])

    exp_log = list(zip(exp_value,exp_change_time))
    exptimes_list.append(exp_log)

def take_focus_log (obslog,jd):
    focus_mask = obslog.duplicated(subset=10)
    focus = np.array(obslog)[~focus_mask]

    focus_change_time = []
    if jd:
        focus_change_time[:] = map(lambda x: f'[{round_jd(x)}] ', focus[:,3])
    else:
        focus_change_time[:] = map(lambda x: f'[{x[0:5]}] ', focus[:,4])
    focus_value = []
    focus_value[:] = map(lambda x: f'{x}', focus[:,11])

    focus_log = list(zip(focus_change_time,focus_value))
    if len(focus_log) != 1:
        focus_log[:] = map(lambda x: ''.join(x), focus_log)
        focus_log = ', '.join(focus_log)
    else:
        focus_log = focus_log[0][1]
    return focus_log

def print_obslog(obsdate, obsdate_weather, comment, ip):
    dt_object = datetime(obs(obsdate)['year'],obs(obsdate)['month'],obs(obsdate)['day'])
    date_for_mail = dt_object.strftime('%B %d, %Y')

    paths = []
    for num in range(0,4):
        paths.append(f'http://{ip}/obslog/{obsdate}/obslog-muscat2-{obsdate}-ccd{num}.csv')

    active_ccds = list(range(0,4))
    ccds = []
    error_message = []
    error_count = 0
    for index, path in enumerate(tqdm.tqdm(paths, desc=f'\rDownloading obslog for observation on {date_for_mail}')):
        try:
            l  = np.array(pd.read_csv(path, encoding='UTF-8').reset_index())
            if len(l) == 0:
                print(f'\r***No obslog is found for CCD {index} on {date_for_mail}***')
                active_ccds.remove(index)
            else:
                ccds.append(l)
        except urllib.error.HTTPError:
            print(f'\r***No obslog is found for CCD {index} on {date_for_mail}***')
            error_count += 1
            if error_count == 4:
                print(f'\r***There was no observation on {date_for_mail}***\r')
            active_ccds.remove(index)
        except pd.errors.ParserError:
            print(f'\r***Obslog for CCD {index} may be corrupt. Please check on http://{ip}/obslog/{args.obsdate}/obslog-muscat2-{args.obsdate}-ccd{index}.html directly***\r')
            active_ccds.remove(index)

    if len(ccds) == 0:
        sys.exit(1) 

    if args.obj == "all":
        object = unique(ccds[0][:,1])
        try:
            object.remove('FLAT')
        except ValueError:
            error_message.append('**MISSING FLAT** FLAT is NOT taken for this observation')
            #pass
        try:
            object.remove('DARK')
        except ValueError:
            error_message.append('**MISSING DARK**DARK is NOT taken for this observation')
            #pass
    else: #create list of matching objects after removing '-'
        object = [s for s in unique(ccds[0][:,1]) if adjust_name(args.obj) in adjust_name(s)]

    df = pd.DataFrame(ccds[0])

    print('\n====== OUTPUT ===================================\n')
    print(f'[MuSCAT2] End of night report {date_for_mail}\n')
    if len(object) == 1:
        print(f'{object[0]} was observed on {date_for_mail}')
    else:
        print(f'{len(object)} targets were observed on {date_for_mail}')

    for item in object:
        obslog = df[df[1] == item].reset_index()
        if args.jd:
            obstimes = f'Obs: {obslog[2][0]} - {obslog[2].iloc[-1]} (JD)'
        else:
            obstimes = f'Obs: {obslog[3][0][0:5]} - {obslog[3].iloc[-1][0:5]} UT'

        start_time = dt_object + timedelta(hours=int(obslog[3][0][0:5][:2])) + timedelta(minutes=int(obslog[3][0][0:5][3:]))
        end_time = dt_object + timedelta(hours=int(obslog[3].iloc[-1][0:5][:2])) + timedelta(minutes=int(obslog[3].iloc[-1][0:5][3:]))
        if past_midnight(int(obslog[3][0][0:5][:2])):
            start_time += timedelta(days=1)
        if past_midnight(int(obslog[3].iloc[-1][0:5][:2])):
            end_time += timedelta(days=1)

        exptimes_list = [] #list of tuples containing (exptime, change_time) for all exposures
        exp_change_time_all_ccd = [] # cumulative list of all ccds of times when exposure time has changed

        focus_log = take_focus_log(obslog,args.jd)
        focus = "" #create empty string which can be overwritten in when generating obslog for emails and registeration to wiki
        ag = None #create empty variable which can be overwritten in when generating obslog for emails and registeration to wiki

        for ccd in ccds:
            df = pd.DataFrame(ccd)
            obslog = df[df[1] == item].reset_index()
            take_exposure_log(obslog,exptimes_list,exp_change_time_all_ccd,args.jd)

        exp_change_time_all_ccd = sorted(unique(np.concatenate(exp_change_time_all_ccd)))

        '''
        prepare pandas dataframe containing the exposure times of each CCD at timestamps when exposure times were changed
        eg:
                0     1     2     3
        20:21  15.0  90.0  90.0  90.0
        20:32  90.0  90.0  90.0  90.0
        20:45  30.0  90.0  90.0  90.0
        20:56  30.0  90.0  15.0  90.0
        '''
        #initialize an empty dataframe
        exp_df = pd.DataFrame(columns=range(len(active_ccds)),index=exp_change_time_all_ccd)#.sort_index()
        #fill in cells
        for index, exposure in enumerate(exptimes_list):
            for log in unique(exposure):
                exp_df[index][log[1]] = log[0]
        exp_df = exp_df.fillna(method='ffill')
        if not args.jd:
            exp_df = exp_df.fillna(method='ffill').rename(index=lambda s: s.strftime('%H:%M'))

        if not args.bypass: #if a specific date is returned and connected to wiki, obtain info from wiki
            obsdate_weather, comment , focus , ag, altitude_plot = find_weather_and_comments(item,observations_df,targets_df,obsdate,start_time,end_time,obslog[2][0],obslog[2].iloc[-1],payload, args.edit,exp_df)

        exp_df.columns = active_ccds
        #if not simply write in a single line
        if ag is not None:
            if len(exp_df) == 1:
                    #(exp_df.iloc[0][int(ag)]) = f'[{exp_df.iloc[0][int(ag)]}]'
                    l = [str(t) for t in exp_df.iloc[0]]
                    exp_df = ', '.join((l))
            else:
                active_ccds[active_ccds.index(int(ag))] = f'[{ag}]'


        #Prepare humidity plot, altitude plot and weather data
        humidity_path = f'http://stella-archive.aip.de/stella/status/detail-text.php?typ=2&from={start_time.strftime("%d.%m.%Y %T")}&until={end_time.strftime("%d.%m.%Y %T")}&onescale=0&minmax=0'
        humidity_plot = f'http://stella-archive.aip.de/stella/status/getdetail{humidity_path[54:]}'

        with requests.Session() as s:
            url_shortener = pyshorteners.Shortener()
            try:
                r = s.get(humidity_path)
                humidity = r.text#.encode('utf-8')
                humidity_reader = csv.reader(io.StringIO(humidity), delimiter=',',quotechar='"',
                                quoting=csv.QUOTE_ALL, skipinitialspace=True)
                humidity_df = pd.DataFrame([row for row in humidity_reader])
                try:
                    humidity_df[1] = humidity_df[1].astype(float)
                    max_humidity = f'{np.round(humidity_df[1].max(),decimals=1)}% (max),'
                    min_humidity = f'{np.round(humidity_df[1].min(),decimals=1)}% (min)'
                except KeyError:
                    max_humidity = "Observation too short for archival data"
                    min_humidity = ""
                except ValueError:
                    max_humidity = "Bad connection with Stella"
                    min_humidity = ""          
                humidity_plot = shorten_url(humidity_plot, url_shortener)
            except requests.exceptions.ConnectionError:
                max_humidity = "Bad connection with Stella"
                min_humidity = ""
                humidity_plot = "Bad connection with Stella"

            if not args.bypass:
                altitude_plot = shorten_url(altitude_plot, url_shortener)
                try:
                    if len(obsdate_weather) == 0:
                        unix_start_time = datetime.timestamp(start_time)
                        unix_end_time = datetime.timestamp(end_time)
                        weather_start = s.get(f'https://www.telescope.org/weathergen/weather-icon.php?time={unix_start_time}')
                        weather_end   = s.get(f'https://www.telescope.org/weathergen/weather-icon.php?time={unix_end_time}')

                        weather_start = telescope_org_weather(weather_start, weather_status)
                        weather_end   = telescope_org_weather(weather_end, weather_status)
                except requests.exceptions.ConnectionError:
                    weather_start = "No record"
                    weather_end = "No record"
            else:
                try:
                    url = s.get(f'https://exofop.ipac.caltech.edu/tess/target.php?id={adjust_name(item)}&json')
                    text = url.text
                    try:
                        res = json.loads(text)["coordinates"]
                        ra = float(res["ra"])
                        ra = deg_to_hms(ra)
                        dec = float(res["dec"])
                        dec = deg_to_dms(dec)
                        jd = Time(start_time.strftime('%Y-%m-%d %T'),format='iso',out_subfmt='date_hm').jd
                        warning = " (THE GREEN SECTION INDICATES OBSERVATION TIME NOT TRANSIT TIME)"
                        altitude_plot = f'https://astro.swarthmore.edu/telescope/tess-secure/plot_airmass.cgi?observatory_string=28.3%3B-16.5097%3BAtlantic%2FCanary%3BMuSCAT2%201.52m%20at%20Teide%20Observatory%3BMuSCAT2%201.52m&observatory_latitude=28.3&observatory_longitude=-16.5097&target={item}{warning}&ra={ra}&dec={dec}&timezone=Atlantic/Canary&jd={jd}&jd_start={obslog[2][0]}&jd_end={obslog[2].iloc[-1]}&use_utc=0&max_airmass=2.4'
                        altitude_plot = shorten_url(altitude_plot, url_shortener)
                    except json.decoder.JSONDecodeError:
                        altitude_plot = "No altitude plot found"
                except requests.exceptions.ConnectionError:
                    altitude_plot = "Bad connection with Exofop"

        #print output
        print('_________________________________________________')
        print(item)
        print(obstimes)   
        print(f'Exp: {exp_df}')
        if len(focus_log) >= 10:
            print(f'Focus: {focus}')
            #print(f'{focus_log}')
        else:
            print(f'Focus: {focus} {focus_log}')
        if not args.bypass:
            if len(obsdate_weather) == 0:
                print(f'Weather: {weather_start} -> {weather_end}')
            else:
                print(f'Weather: {obsdate_weather}')
        if not args.bypass:
            print(f'Comments: {comment}')
        if args.details:
            print(f'Humidity: {max_humidity} {min_humidity}')
            print(f'\nAltitude plot: {altitude_plot}')
            print(f'Humidity plot: {humidity_plot}')
            #time.sleep(2)
            
    print('_________________________________________________')
    print('\nNote:')
    if len(active_ccds) != 4:
        print(f'\n**MISSING CCD**Exposure times are for CCDs {active_ccds} respectively.\n')
    for error in error_message:
        print(f'{error}\n')
    #if args.obsdate is not None:
    #    print('Please specify the CCD used for ag separately.')
    print('Optional argument --details can be provided to print details like humidity and altitude.\n')
    print('Optional argument --jd can be provided to show times in JD.\n')

for obsdate, obsdate_weather, comment in zip(obsdates, weather, comments):
    print_obslog(obsdate, obsdate_weather, comment, ip['shine'])
#一番短い露光時間のCCDの観測開始時間が1分遅れてしまうバグがある m秒のずれでCCD間で59秒と00秒になってしまうことが判明したのでseconds == 59の場合、(timdelta(seconds=1))で解決
